class MudElementReference{constructor(){this.listenerId=0;this.eventListeners={}}focus(element){element.focus()}focusFirst(element,skip=0,min=0){let tabbables=getTabbableElements(element);tabbables.length<=min?element.focus():tabbables[skip].focus()}focusLast(element,skip=0,min=0){let tabbables=getTabbableElements(element);tabbables.length<=min?element.focus():tabbables[tabbables.length-skip-1].focus()}saveFocus(element){element.mudblazor_savedFocus=document.activeElement}restoreFocus(element){let previous=element.mudblazor_savedFocus;delete element.mudblazor_savedFocus;previous&&previous.focus()}selectRange(element,pos1,pos2){if(element.createTextRange){let selRange=element.createTextRange();selRange.collapse(!0);selRange.moveStart("character",pos1);selRange.moveEnd("character",pos2);selRange.select()}else element.setSelectionRange?element.setSelectionRange(pos1,pos2):element.selectionStart&&(element.selectionStart=pos1,element.selectionEnd=pos2);element.focus()}select(element){element.select()}getBoundingClientRect(element){return element.getBoundingClientRect()}changeCss(element,css){element.className=css}changeCssVariable(element,name,newValue){element.style.setProperty(name,newValue)}addEventListener(element,dotnet,event,callback,spec,stopPropagation){let listener=function(e){const args=Array.from(spec,x=>serializeParameter(e,x));dotnet.invokeMethodAsync(callback,...args);stopPropagation&&e.stopPropagation()};return element.addEventListener(event,listener),this.eventListeners[++this.listenerId]=listener,this.listenerId}removeEventListener(element,event,eventId){element.removeEventListener(event,this.eventListeners[eventId]);delete this.eventListeners[eventId]}}window.mudElementRef=new MudElementReference;window.getTabbableElements=element=>element.querySelectorAll("a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']):not([type='hidden']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),details:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1']");window.serializeParameter=(data,spec)=>{if(typeof data=="undefined"||data===null)return null;if(typeof data=="number"||typeof data=="string"||typeof data=="boolean")return data;let res=Array.isArray(data)?[]:{};spec||(spec="*");for(let i in data){let currentMember=data[i];if(typeof currentMember!="function"&&currentMember!==null){let currentMemberSpec;if(spec!="*"){if(currentMemberSpec=Array.isArray(data)?spec:spec[i],!currentMemberSpec)continue}else currentMemberSpec="*";if(typeof currentMember=="object")if(Array.isArray(currentMember)||currentMember.length){res[i]=[];for(let j=0;j<currentMember.length;j++){const arrayItem=currentMember[j];typeof arrayItem=="object"?res[i].push(this.serializeParameter(arrayItem,currentMemberSpec)):res[i].push(arrayItem)}}else res[i]=currentMember.length===0?[]:this.serializeParameter(currentMember,currentMemberSpec);else currentMember===Infinity&&(currentMember="Infinity"),currentMember!==null&&(res[i]=currentMember)}}return res};class MudResizeListener{constructor(){this.logger=function(){};this.options={};this.throttleResizeHandlerId=-1;this.dotnet=undefined;this.breakpoint=-1}listenForResize(dotnetRef,options){if(this.dotnet){this.options=options;return}this.options=options;this.dotnet=dotnetRef;this.logger=options.enableLogging?console.log:()=>{};this.logger(`[MudBlazor] Reporting resize events at rate of: ${(this.options||{}).reportRate||100}ms`);window.addEventListener("resize",this.throttleResizeHandler.bind(this),!1);this.options.suppressInitEvent||this.resizeHandler();this.breakpoint=this.getBreakpoint(window.innerWidth)}throttleResizeHandler(){if(this.options.notifyOnBreakpointOnly){let bp=this.getBreakpoint(window.innerWidth);bp!=this.breakpoint&&(this.resizeHandler(),this.breakpoint=bp)}else clearTimeout(this.throttleResizeHandlerId),this.throttleResizeHandlerId=window.setTimeout(this.resizeHandler.bind(this),(this.options||{}).reportRate||100)}resizeHandler(){try{this.dotnet.invokeMethodAsync("RaiseOnResized",{height:window.innerHeight,width:window.innerWidth},this.getBreakpoint(window.innerWidth))}catch(error){this.logger("[MudBlazor] Error in resizeHandler:",{error})}}cancelListener(){this.dotnet=undefined;window.removeEventListener("resize",this.throttleResizeHandler)}matchMedia(query){return window.matchMedia(query).matches}getBrowserWindowSize(){return{height:window.innerHeight,width:window.innerWidth}}getBreakpoint(width){return width>=this.options.breakpointDefinitions.Xl?4:width>=this.options.breakpointDefinitions.Lg?3:width>=this.options.breakpointDefinitions.Md?2:width>=this.options.breakpointDefinitions.Sm?1:0}}window.mudResizeListener=new MudResizeListener;class MudScrollListener{constructor(){this.throttleScrollHandlerId=-1}listenForScroll(dotnetReference,selector){let element=selector?document.querySelector(selector):document;element.addEventListener("scroll",this.throttleScrollHandler.bind(this,dotnetReference),!1)}throttleScrollHandler(dotnetReference,event){clearTimeout(this.throttleScrollHandlerId);this.throttleScrollHandlerId=window.setTimeout(this.scrollHandler.bind(this,dotnetReference,event),100)}scrollHandler(dotnetReference,event){try{let element=event.target,scrollTop=element.scrollTop,scrollHeight=element.scrollHeight,scrollWidth=element.scrollWidth,scrollLeft=element.scrollLeft,nodeName=element.nodeName,firstChild=element.firstElementChild,firstChildBoundingClientRect=firstChild.getBoundingClientRect();dotnetReference.invokeMethodAsync("RaiseOnScroll",{firstChildBoundingClientRect,scrollLeft,scrollTop,scrollHeight,scrollWidth,nodeName})}catch(error){console.log("[MudBlazor] Error in scrollHandler:",{error})}}cancelListener(selector){let element=selector?document.querySelector(selector):document.documentElement;element.removeEventListener("scroll",this.throttleScrollHandler)}}window.mudScrollListener=new MudScrollListener;class MudScrollManager{scrollToFragment(elementId,behavior){let element=document.getElementById(elementId);element&&element.scrollIntoView({behavior,block:"center",inline:"start"})}scrollToYear(elementId){let element=document.getElementById(elementId);element&&(element.parentNode.scrollTop=element.offsetTop-element.parentNode.offsetTop-element.scrollHeight*3)}scrollToListItem(elementId,increment,onEdges){let element=document.getElementById(elementId);if(element){let parent=element.parentElement;if(increment==0){parent.scrollTop=0;return}let{bottom:eBottom,height:eHeight,top:eTop}=element.getBoundingClientRect(),{bottom:pBottom,top:pTop}=parent.getBoundingClientRect();(pBottom-eBottom<=0&&increment>0||eTop-pTop<=0&&increment<0||!onEdges)&&(parent.scrollTop+=eHeight*increment)}}scrollTo(selector,left,top,behavior){let element=document.querySelector(selector)||document.documentElement;element.scrollTo({left,top,behavior})}lockScroll(selector,lockclass){let element=document.querySelector(selector)||document.body;element.classList.add(lockclass)}unlockScroll(selector,lockclass){let element=document.querySelector(selector)||document.body;element.classList.remove(lockclass)}}window.mudScrollManager=new MudScrollManager;class MudWindow{copyToClipboard(text){navigator.clipboard.writeText(text)}changeCssById(id,css){var element=document.getElementById(id);element&&(element.className=css)}changeGlobalCssVariable(name,newValue){document.documentElement.style.setProperty(name,newValue)}open(args){window.open(args)}scrollToFragment(elementId,behavior){let element=document.getElementById(elementId);element&&element.scrollIntoView({behavior,block:"center",inline:"start"})}scrollToYear(elementId){let element=document.getElementById(elementId);element&&(element.parentNode.scrollTop=element.offsetTop-element.parentNode.offsetTop-element.scrollHeight*3)}scrollToListItem(elementId,increment,onEdges){let element=document.getElementById(elementId);if(element){let parent=element.parentElement;if(increment==0){parent.scrollTop=0;return}let{bottom:eBottom,height:eHeight,top:eTop}=element.getBoundingClientRect(),{bottom:pBottom,top:pTop}=parent.getBoundingClientRect();(pBottom-eBottom<=0&&increment>0||eTop-pTop<=0&&increment<0||!onEdges)&&(parent.scrollTop+=eHeight*increment)}}scrollTo(selector,left,top,behavior){let element=document.querySelector(selector)||document.documentElement;element.scrollTo({left,top,behavior})}lockScroll(selector,lockclass){let element=document.querySelector(selector)||document.body;element.classList.add(lockclass)}unlockScroll(selector,lockclass){let element=document.querySelector(selector)||document.body;element.classList.remove(lockclass)}}window.mudWindow=new MudWindow;